1. Crear una base de datos llamada call_list

		CREATE DATABASE call_list;

		\c call_list;



2. En la base de datos recien creada, crear la tabla users con los campos id (clave primaria), first_name, email.

		CREATE TABLE users (
		id SERIAL primary key,
		first_name VARCHAR(50),
		email VARCHAR(100)
		);



3. Ingresar un usuario, llamado Carlos (el resto de los datos deben inventarlos).

		INSERT INTO users (first_name, email) VALUES('Carlos', 'carlos@psql.com');



4. Ingresar un usuario, llamada Laura (el resto de los datos deben inventarlos).

		INSERT INTO users (first_name, email) VALUES('Laura', 'laura@psql.com');



5. Crear una tabla llamada calls con los campos id (clave primaria), phone, date, user_id (foreign key relacionado a users).

		CREATE TABLE calls (
		id SERIAL primary key,
		phone VARCHAR(12),
		date VARCHAR(50),
		user_id INTEGER REFERENCES users (id)
		);



6. Agregar a la tabla users el campo last_name.

		ALTER TABLE users ADD COLUMN last_name VARCHAR(50);



7. Ingresar el apellido del usuario Carlos.

		UPDATE users SET last_name = 'Rodríguez' WHERE id = 1;



8. Ingresar el apellido del usuario Laura.

		UPDATE users SET last_name = 'Sánchez' WHERE id = 2;



9. Ingresar 6 llamadas asociadas al usuario Laura.

		INSERT INTO calls (phone, date, user_id) VALUES('+56123456789', '27/09/2018', 2);
		INSERT INTO calls (phone, date, user_id) VALUES('+56234567890', '28/09/2018', 2);
		INSERT INTO calls (phone, date, user_id) VALUES('+56345678901', '29/09/2018', 2);
		INSERT INTO calls (phone, date, user_id) VALUES('+56456789012', '30/09/2018', 2);
		INSERT INTO calls (phone, date, user_id) VALUES('+56567890123', '01/10/2018', 2);
		INSERT INTO calls (phone, date, user_id) VALUES('+56678901234', '02/10/2018', 2);



10. Ingresar 4 llamadas asociadas al usuario Carlos.

		INSERT INTO calls (phone, date, user_id) VALUES('+56789012345', '29/09/2018', 1);
		INSERT INTO calls (phone, date, user_id) VALUES('+56890123456', '30/09/2018', 1);
		INSERT INTO calls (phone, date, user_id) VALUES('+56901234567', '01/10/2018', 1);
		INSERT INTO calls (phone, date, user_id) VALUES('+56012345678', '02/10/2018', 1);



11. Crear un nuevo usuario.

		INSERT INTO users (first_name, email) VALUES('Lowtjie', 'lowtjie@psql.com');



12. Seleccionar la cantidad de llamados de cada uno de los usuarios (nombre de usuario y cantidad de llamadas).

		SELECT first_name, last_name, COUNT(phone) as phone_calls FROM users LEFT JOIN calls ON (users.id = user_id) GROUP BY first_name, last_name;



13. Seleccionar los llamados del usuario llamado Carlos ordenados por fecha en orden descendente.

		SELECT first_name, last_name, phone as phone_calls, date FROM users LEFT JOIN calls ON (users.id = user_id) WHERE first_name = 'Carlos' ORDER BY date DESC;

Nuevos cambios solicitados por cliente.
"Necesito agregar a la base una tabla de auditoría que registre el motivo del borrado de una llamada y el usuario que lo efectuó."

		CREATE TABLE audit (
		id SERIAL primary key,
		reason VARCHAR(250),
		date TIMESTAMP default current_timestamp,
		user_id INTEGER REFERENCES users (id)
		);
